import random

def print_board(board):
    print("-------------")
    for row in board:
        print("| " + " | ".join(row) + " |")
        print("-------------")

def check_winner(board, player):
    for row in board:
        if all(cell == player for cell in row):
            return True
    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)) or all(board[i][2-i] == player for i in range(3)):
        return True
    return False

def is_board_full(board):
    return all(cell != ' ' for row in board for cell in row)

def player_move(board, player):
    while True:
        row = int(input("Enter the row (0-2): "))
        col = int(input("Enter the column (0-2): "))
        if 0 <= row < 3 and 0 <= col < 3 and board[row][col] == ' ':
            board[row][col] = player
            break
        else:
            print("Invalid move. Try again.")

def ai_move(board, ai_player):
    empty_cells = [(row, col) for row in range(3) for col in range(3) if board[row][col] == ' ']
    row, col = random.choice(empty_cells)
    board[row][col] = ai_player

def main():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    players = ['X', 'O']
    random.shuffle(players)
    current_player = players[0]

    print_board(board)

    while True:
        if current_player == 'X':
            player_move(board, current_player)
        else:
            ai_move(board, current_player)

        print_board(board)

        if check_winner(board, current_player):
            print(f"{current_player} wins!")
            break
        elif is_board_full(board):
            print("It's a tie!")
            break

        current_player = 'X' if current_player == 'O' else 'O'

if __name__ == "__main__":
    main()
